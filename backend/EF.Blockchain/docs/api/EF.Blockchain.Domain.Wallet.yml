### YamlMime:ManagedReference
items:
- uid: EF.Blockchain.Domain.Wallet
  commentId: T:EF.Blockchain.Domain.Wallet
  id: Wallet
  parent: EF.Blockchain.Domain
  children:
  - EF.Blockchain.Domain.Wallet.#ctor(System.String)
  - EF.Blockchain.Domain.Wallet.PrivateKey
  - EF.Blockchain.Domain.Wallet.PublicKey
  langs:
  - csharp
  - vb
  name: Wallet
  nameWithType: Wallet
  fullName: EF.Blockchain.Domain.Wallet
  type: Class
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Domain/Wallet.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: Wallet
    path: ../src/EF.Blockchain.Domain/Wallet.cs
    startLine: 7
  assemblies:
  - EF.Blockchain.Domain
  namespace: EF.Blockchain.Domain
  summary: Represents a wallet with a public and private key used to sign and verify blockchain transactions.
  example: []
  syntax:
    content: public class Wallet
    content.vb: Public Class Wallet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: EF.Blockchain.Domain.Wallet.PrivateKey
  commentId: P:EF.Blockchain.Domain.Wallet.PrivateKey
  id: PrivateKey
  parent: EF.Blockchain.Domain.Wallet
  langs:
  - csharp
  - vb
  name: PrivateKey
  nameWithType: Wallet.PrivateKey
  fullName: EF.Blockchain.Domain.Wallet.PrivateKey
  type: Property
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Domain/Wallet.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: PrivateKey
    path: ../src/EF.Blockchain.Domain/Wallet.cs
    startLine: 12
  assemblies:
  - EF.Blockchain.Domain
  namespace: EF.Blockchain.Domain
  summary: The private key in hexadecimal format. Used to sign transactions.
  example: []
  syntax:
    content: public string PrivateKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PrivateKey As String
  overload: EF.Blockchain.Domain.Wallet.PrivateKey*
- uid: EF.Blockchain.Domain.Wallet.PublicKey
  commentId: P:EF.Blockchain.Domain.Wallet.PublicKey
  id: PublicKey
  parent: EF.Blockchain.Domain.Wallet
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: Wallet.PublicKey
  fullName: EF.Blockchain.Domain.Wallet.PublicKey
  type: Property
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Domain/Wallet.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: PublicKey
    path: ../src/EF.Blockchain.Domain/Wallet.cs
    startLine: 17
  assemblies:
  - EF.Blockchain.Domain
  namespace: EF.Blockchain.Domain
  summary: The public key in hexadecimal format. Used to verify ownership and generate the wallet address.
  example: []
  syntax:
    content: public string PublicKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PublicKey As String
  overload: EF.Blockchain.Domain.Wallet.PublicKey*
- uid: EF.Blockchain.Domain.Wallet.#ctor(System.String)
  commentId: M:EF.Blockchain.Domain.Wallet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: EF.Blockchain.Domain.Wallet
  langs:
  - csharp
  - vb
  name: Wallet(string?)
  nameWithType: Wallet.Wallet(string?)
  fullName: EF.Blockchain.Domain.Wallet.Wallet(string?)
  type: Constructor
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Domain/Wallet.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: .ctor
    path: ../src/EF.Blockchain.Domain/Wallet.cs
    startLine: 27
  assemblies:
  - EF.Blockchain.Domain
  namespace: EF.Blockchain.Domain
  summary: >-
    Initializes a new wallet.

    Can use a raw private key (64 hex chars), a WIF string, or generate a new key if none is provided.
  example: []
  syntax:
    content: public Wallet(string? wifOrPrivateKey = null)
    parameters:
    - id: wifOrPrivateKey
      type: System.String
      description: >-
        Optional string representing a raw private key (64 hex characters) or a WIF-encoded private key.

        If null, a new random key is generated.
    content.vb: Public Sub New(wifOrPrivateKey As String = Nothing)
  overload: EF.Blockchain.Domain.Wallet.#ctor*
  nameWithType.vb: Wallet.New(String)
  fullName.vb: EF.Blockchain.Domain.Wallet.New(String)
  name.vb: New(String)
references:
- uid: EF.Blockchain.Domain
  commentId: N:EF.Blockchain.Domain
  href: EF.html
  name: EF.Blockchain.Domain
  nameWithType: EF.Blockchain.Domain
  fullName: EF.Blockchain.Domain
  spec.csharp:
  - uid: EF
    name: EF
    href: EF.html
  - name: .
  - uid: EF.Blockchain
    name: Blockchain
    href: EF.Blockchain.html
  - name: .
  - uid: EF.Blockchain.Domain
    name: Domain
    href: EF.Blockchain.Domain.html
  spec.vb:
  - uid: EF
    name: EF
    href: EF.html
  - name: .
  - uid: EF.Blockchain
    name: Blockchain
    href: EF.Blockchain.html
  - name: .
  - uid: EF.Blockchain.Domain
    name: Domain
    href: EF.Blockchain.Domain.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EF.Blockchain.Domain.Wallet.PrivateKey*
  commentId: Overload:EF.Blockchain.Domain.Wallet.PrivateKey
  href: EF.Blockchain.Domain.Wallet.html#EF_Blockchain_Domain_Wallet_PrivateKey
  name: PrivateKey
  nameWithType: Wallet.PrivateKey
  fullName: EF.Blockchain.Domain.Wallet.PrivateKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: EF.Blockchain.Domain.Wallet.PublicKey*
  commentId: Overload:EF.Blockchain.Domain.Wallet.PublicKey
  href: EF.Blockchain.Domain.Wallet.html#EF_Blockchain_Domain_Wallet_PublicKey
  name: PublicKey
  nameWithType: Wallet.PublicKey
  fullName: EF.Blockchain.Domain.Wallet.PublicKey
- uid: EF.Blockchain.Domain.Wallet.#ctor*
  commentId: Overload:EF.Blockchain.Domain.Wallet.#ctor
  href: EF.Blockchain.Domain.Wallet.html#EF_Blockchain_Domain_Wallet__ctor_System_String_
  name: Wallet
  nameWithType: Wallet.Wallet
  fullName: EF.Blockchain.Domain.Wallet.Wallet
  nameWithType.vb: Wallet.New
  fullName.vb: EF.Blockchain.Domain.Wallet.New
  name.vb: New
