### YamlMime:ManagedReference
items:
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
  commentId: T:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
  id: BlockchainStatusResponse
  parent: EF.Blockchain.Server.Endpoints
  children:
  - EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.#ctor(System.Int32,System.Int32,System.Boolean,EF.Blockchain.Domain.Block)
  - EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Blocks
  - EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.IsValid
  - EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.LastBlock
  - EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Mempool
  langs:
  - csharp
  - vb
  name: BlockchainStatusResponse
  nameWithType: BlockchainStatusResponse
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
  type: Class
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: BlockchainStatusResponse
    path: ../src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
    startLine: 51
  assemblies:
  - EF.Blockchain.Server
  namespace: EF.Blockchain.Server.Endpoints
  summary: Response model for the /status endpoint.
  example: []
  syntax:
    content: 'public record BlockchainStatusResponse : IEquatable<BlockchainStatusResponse>'
    content.vb: Public Class BlockchainStatusResponse Implements IEquatable(Of BlockchainStatusResponse)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{EF.Blockchain.Server.Endpoints.BlockchainStatusResponse}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.#ctor(System.Int32,System.Int32,System.Boolean,EF.Blockchain.Domain.Block)
  commentId: M:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.#ctor(System.Int32,System.Int32,System.Boolean,EF.Blockchain.Domain.Block)
  id: '#ctor(System.Int32,System.Int32,System.Boolean,EF.Blockchain.Domain.Block)'
  parent: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
  langs:
  - csharp
  - vb
  name: BlockchainStatusResponse(int, int, bool, Block?)
  nameWithType: BlockchainStatusResponse.BlockchainStatusResponse(int, int, bool, Block?)
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.BlockchainStatusResponse(int, int, bool, EF.Blockchain.Domain.Block?)
  type: Constructor
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: .ctor
    path: ../src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
    startLine: 51
  assemblies:
  - EF.Blockchain.Server
  namespace: EF.Blockchain.Server.Endpoints
  summary: Response model for the /status endpoint.
  example: []
  syntax:
    content: public BlockchainStatusResponse(int Mempool, int Blocks, bool IsValid, Block? LastBlock)
    parameters:
    - id: Mempool
      type: System.Int32
      description: Number of pending transactions.
    - id: Blocks
      type: System.Int32
      description: Total number of blocks in the chain.
    - id: IsValid
      type: System.Boolean
      description: Whether the blockchain is valid.
    - id: LastBlock
      type: EF.Blockchain.Domain.Block
      description: The most recent block.
    content.vb: Public Sub New(Mempool As Integer, Blocks As Integer, IsValid As Boolean, LastBlock As Block)
  overload: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.#ctor*
  nameWithType.vb: BlockchainStatusResponse.New(Integer, Integer, Boolean, Block)
  fullName.vb: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.New(Integer, Integer, Boolean, EF.Blockchain.Domain.Block)
  name.vb: New(Integer, Integer, Boolean, Block)
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Mempool
  commentId: P:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Mempool
  id: Mempool
  parent: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
  langs:
  - csharp
  - vb
  name: Mempool
  nameWithType: BlockchainStatusResponse.Mempool
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Mempool
  type: Property
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: Mempool
    path: ../src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
    startLine: 52
  assemblies:
  - EF.Blockchain.Server
  namespace: EF.Blockchain.Server.Endpoints
  summary: Number of pending transactions.
  example: []
  syntax:
    content: public int Mempool { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Mempool As Integer
  overload: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Mempool*
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Blocks
  commentId: P:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Blocks
  id: Blocks
  parent: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
  langs:
  - csharp
  - vb
  name: Blocks
  nameWithType: BlockchainStatusResponse.Blocks
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Blocks
  type: Property
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: Blocks
    path: ../src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
    startLine: 53
  assemblies:
  - EF.Blockchain.Server
  namespace: EF.Blockchain.Server.Endpoints
  summary: Total number of blocks in the chain.
  example: []
  syntax:
    content: public int Blocks { get; init; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Blocks As Integer
  overload: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Blocks*
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.IsValid
  commentId: P:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.IsValid
  id: IsValid
  parent: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: BlockchainStatusResponse.IsValid
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.IsValid
  type: Property
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: IsValid
    path: ../src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
    startLine: 54
  assemblies:
  - EF.Blockchain.Server
  namespace: EF.Blockchain.Server.Endpoints
  summary: Whether the blockchain is valid.
  example: []
  syntax:
    content: public bool IsValid { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsValid As Boolean
  overload: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.IsValid*
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.LastBlock
  commentId: P:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.LastBlock
  id: LastBlock
  parent: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
  langs:
  - csharp
  - vb
  name: LastBlock
  nameWithType: BlockchainStatusResponse.LastBlock
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.LastBlock
  type: Property
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: LastBlock
    path: ../src/EF.Blockchain.Server/Endpoints/StatusEndpoints.cs
    startLine: 55
  assemblies:
  - EF.Blockchain.Server
  namespace: EF.Blockchain.Server.Endpoints
  summary: The most recent block.
  example: []
  syntax:
    content: public Block? LastBlock { get; init; }
    parameters: []
    return:
      type: EF.Blockchain.Domain.Block
    content.vb: Public Property LastBlock As Block
  overload: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.LastBlock*
references:
- uid: EF.Blockchain.Server.Endpoints
  commentId: N:EF.Blockchain.Server.Endpoints
  href: EF.html
  name: EF.Blockchain.Server.Endpoints
  nameWithType: EF.Blockchain.Server.Endpoints
  fullName: EF.Blockchain.Server.Endpoints
  spec.csharp:
  - uid: EF
    name: EF
    href: EF.html
  - name: .
  - uid: EF.Blockchain
    name: Blockchain
    href: EF.Blockchain.html
  - name: .
  - uid: EF.Blockchain.Server
    name: Server
    href: EF.Blockchain.Server.html
  - name: .
  - uid: EF.Blockchain.Server.Endpoints
    name: Endpoints
    href: EF.Blockchain.Server.Endpoints.html
  spec.vb:
  - uid: EF
    name: EF
    href: EF.html
  - name: .
  - uid: EF.Blockchain
    name: Blockchain
    href: EF.Blockchain.html
  - name: .
  - uid: EF.Blockchain.Server
    name: Server
    href: EF.Blockchain.Server.html
  - name: .
  - uid: EF.Blockchain.Server.Endpoints
    name: Endpoints
    href: EF.Blockchain.Server.Endpoints.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{EF.Blockchain.Server.Endpoints.BlockchainStatusResponse}
  commentId: T:System.IEquatable{EF.Blockchain.Server.Endpoints.BlockchainStatusResponse}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<BlockchainStatusResponse>
  nameWithType: IEquatable<BlockchainStatusResponse>
  fullName: System.IEquatable<EF.Blockchain.Server.Endpoints.BlockchainStatusResponse>
  nameWithType.vb: IEquatable(Of BlockchainStatusResponse)
  fullName.vb: System.IEquatable(Of EF.Blockchain.Server.Endpoints.BlockchainStatusResponse)
  name.vb: IEquatable(Of BlockchainStatusResponse)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
    name: BlockchainStatusResponse
    href: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse
    name: BlockchainStatusResponse
    href: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.#ctor*
  commentId: Overload:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.#ctor
  href: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.html#EF_Blockchain_Server_Endpoints_BlockchainStatusResponse__ctor_System_Int32_System_Int32_System_Boolean_EF_Blockchain_Domain_Block_
  name: BlockchainStatusResponse
  nameWithType: BlockchainStatusResponse.BlockchainStatusResponse
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.BlockchainStatusResponse
  nameWithType.vb: BlockchainStatusResponse.New
  fullName.vb: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: EF.Blockchain.Domain.Block
  commentId: T:EF.Blockchain.Domain.Block
  parent: EF.Blockchain.Domain
  href: EF.Blockchain.Domain.Block.html
  name: Block
  nameWithType: Block
  fullName: EF.Blockchain.Domain.Block
- uid: EF.Blockchain.Domain
  commentId: N:EF.Blockchain.Domain
  href: EF.html
  name: EF.Blockchain.Domain
  nameWithType: EF.Blockchain.Domain
  fullName: EF.Blockchain.Domain
  spec.csharp:
  - uid: EF
    name: EF
    href: EF.html
  - name: .
  - uid: EF.Blockchain
    name: Blockchain
    href: EF.Blockchain.html
  - name: .
  - uid: EF.Blockchain.Domain
    name: Domain
    href: EF.Blockchain.Domain.html
  spec.vb:
  - uid: EF
    name: EF
    href: EF.html
  - name: .
  - uid: EF.Blockchain
    name: Blockchain
    href: EF.Blockchain.html
  - name: .
  - uid: EF.Blockchain.Domain
    name: Domain
    href: EF.Blockchain.Domain.html
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Mempool*
  commentId: Overload:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Mempool
  href: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.html#EF_Blockchain_Server_Endpoints_BlockchainStatusResponse_Mempool
  name: Mempool
  nameWithType: BlockchainStatusResponse.Mempool
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Mempool
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Blocks*
  commentId: Overload:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Blocks
  href: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.html#EF_Blockchain_Server_Endpoints_BlockchainStatusResponse_Blocks
  name: Blocks
  nameWithType: BlockchainStatusResponse.Blocks
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.Blocks
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.IsValid*
  commentId: Overload:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.IsValid
  href: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.html#EF_Blockchain_Server_Endpoints_BlockchainStatusResponse_IsValid
  name: IsValid
  nameWithType: BlockchainStatusResponse.IsValid
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.IsValid
- uid: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.LastBlock*
  commentId: Overload:EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.LastBlock
  href: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.html#EF_Blockchain_Server_Endpoints_BlockchainStatusResponse_LastBlock
  name: LastBlock
  nameWithType: BlockchainStatusResponse.LastBlock
  fullName: EF.Blockchain.Server.Endpoints.BlockchainStatusResponse.LastBlock
