### YamlMime:ManagedReference
items:
- uid: EF.Blockchain.Domain.TransactionType
  commentId: T:EF.Blockchain.Domain.TransactionType
  id: TransactionType
  parent: EF.Blockchain.Domain
  children:
  - EF.Blockchain.Domain.TransactionType.FEE
  - EF.Blockchain.Domain.TransactionType.REGULAR
  langs:
  - csharp
  - vb
  name: TransactionType
  nameWithType: TransactionType
  fullName: EF.Blockchain.Domain.TransactionType
  type: Enum
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Domain/TransactionType.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: TransactionType
    path: ../src/EF.Blockchain.Domain/TransactionType.cs
    startLine: 5
  assemblies:
  - EF.Blockchain.Domain
  namespace: EF.Blockchain.Domain
  summary: Defines the type of a blockchain transaction.
  example: []
  syntax:
    content: public enum TransactionType
    content.vb: Public Enum TransactionType
- uid: EF.Blockchain.Domain.TransactionType.REGULAR
  commentId: F:EF.Blockchain.Domain.TransactionType.REGULAR
  id: REGULAR
  parent: EF.Blockchain.Domain.TransactionType
  langs:
  - csharp
  - vb
  name: REGULAR
  nameWithType: TransactionType.REGULAR
  fullName: EF.Blockchain.Domain.TransactionType.REGULAR
  type: Field
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Domain/TransactionType.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: REGULAR
    path: ../src/EF.Blockchain.Domain/TransactionType.cs
    startLine: 10
  assemblies:
  - EF.Blockchain.Domain
  namespace: EF.Blockchain.Domain
  summary: A standard transaction transferring value between addresses.
  example: []
  syntax:
    content: REGULAR = 1
    return:
      type: EF.Blockchain.Domain.TransactionType
- uid: EF.Blockchain.Domain.TransactionType.FEE
  commentId: F:EF.Blockchain.Domain.TransactionType.FEE
  id: FEE
  parent: EF.Blockchain.Domain.TransactionType
  langs:
  - csharp
  - vb
  name: FEE
  nameWithType: TransactionType.FEE
  fullName: EF.Blockchain.Domain.TransactionType.FEE
  type: Field
  source:
    remote:
      path: backend/EF.Blockchain/src/EF.Blockchain.Domain/TransactionType.cs
      branch: main
      repo: https://github.com/efernandes-tech/web3-001-ef-blockchain.git
    id: FEE
    path: ../src/EF.Blockchain.Domain/TransactionType.cs
    startLine: 15
  assemblies:
  - EF.Blockchain.Domain
  namespace: EF.Blockchain.Domain
  summary: A special transaction that rewards the miner (e.g., block reward + fees).
  example: []
  syntax:
    content: FEE = 2
    return:
      type: EF.Blockchain.Domain.TransactionType
references:
- uid: EF.Blockchain.Domain
  commentId: N:EF.Blockchain.Domain
  href: EF.html
  name: EF.Blockchain.Domain
  nameWithType: EF.Blockchain.Domain
  fullName: EF.Blockchain.Domain
  spec.csharp:
  - uid: EF
    name: EF
    href: EF.html
  - name: .
  - uid: EF.Blockchain
    name: Blockchain
    href: EF.Blockchain.html
  - name: .
  - uid: EF.Blockchain.Domain
    name: Domain
    href: EF.Blockchain.Domain.html
  spec.vb:
  - uid: EF
    name: EF
    href: EF.html
  - name: .
  - uid: EF.Blockchain
    name: Blockchain
    href: EF.Blockchain.html
  - name: .
  - uid: EF.Blockchain.Domain
    name: Domain
    href: EF.Blockchain.Domain.html
- uid: EF.Blockchain.Domain.TransactionType
  commentId: T:EF.Blockchain.Domain.TransactionType
  parent: EF.Blockchain.Domain
  href: EF.Blockchain.Domain.TransactionType.html
  name: TransactionType
  nameWithType: TransactionType
  fullName: EF.Blockchain.Domain.TransactionType
